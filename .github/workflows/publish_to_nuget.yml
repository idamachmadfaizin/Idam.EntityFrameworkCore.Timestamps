name: Publish
on:
  push:
    tags:
      - 'v*'
    branches:
      - 6-create-gh-action-to-publish-to-nugetcom

env:
  dotnetVersion: 9.x.x
  srcProjectPath: Idam.EntityFrameworkCore.Timestamps
  testProjectPath: Idam.EntityFrameworkCore.Timestamps.Tests

jobs:
  test:
    name: "Test the package before publish"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup .NET ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Cache .NET Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore `${{ env.testProjectPath }}` Dependencies
        run: dotnet restore ${{ env.testProjectPath }}

      - name: Build `${{ env.testProjectPath }}`
        run: dotnet build ${{ env.testProjectPath }} --configuration Release --no-restore

      - name: Test
        run: dotnet test ${{ env.testProjectPath }} --no-restore --verbosity normal

  publish:
    name: "Build, Pack, and Publish package to NuGet.org"
    runs-on: ubuntu-latest
    
    needs: test
    if: ${{ needs.test.result == 'success' }}
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup .NET ${{ env.dotnetVersion }}
        uses: actions/setup-dotnet@v5
        with:
          dotnet-version: ${{ env.dotnetVersion }}

      - name: Cache .NET Dependencies
        uses: actions/cache@v4
        with:
          path: ~/.nuget/packages
          # Look to see if there is a cache hit for the corresponding requirements file
          key: ${{ runner.os }}-nuget-${{ hashFiles('**/packages.lock.json') }}
          restore-keys: |
            ${{ runner.os }}-nuget-

      - name: Restore `${{ env.srcProjectPath }}` Dependencies
        run: dotnet restore ${{ env.srcProjectPath }}

      - name: Build `${{ env.srcProjectPath }}`
        run: dotnet build ${{ env.srcProjectPath }} --configuration Release --no-restore

      - name: Echo package output
        run: ls ${{ github.workspace }}/${{ env.srcProjectPath }}/bin/Release

      - name: Publish to NuGet.org
        run: dotnet nuget push ${{ env.srcProjectPath }}/bin/Release/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }}
